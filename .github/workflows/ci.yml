name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: dup
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      
      minio:
        image: minio/minio
        command: server /data --console-address ":9001"
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/live"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 9000:9000
          - 9001:9001

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Setup environment
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/dup" >> .env
        echo "REDIS_URL=redis://localhost:6379" >> .env
        echo "S3_ENDPOINT=http://localhost:9000" >> .env
        echo "S3_REGION=us-east-1" >> .env
        echo "S3_ACCESS_KEY=minioadmin" >> .env
        echo "S3_SECRET_KEY=minioadmin" >> .env
        echo "S3_BUCKET=dups" >> .env
        echo "NEXTAUTH_URL=http://localhost:3000" >> .env
        echo "NEXTAUTH_SECRET=test-secret" >> .env
    
    - name: Generate Prisma client
      run: pnpm db:generate
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/dup
    
    - name: Run database migrations
      run: pnpm db:push
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:6379/dup
    
    - name: Run unit tests
      run: pnpm test
    
    - name: Run type check
      run: pnpm typecheck
    
    - name: Run linting
      run: pnpm lint
    
    - name: Build project
      run: pnpm build
    
    - name: Install Playwright
      run: pnpm e2e:install
    
    - name: Start services
      run: |
        docker run -d --name minio \
          -e MINIO_ROOT_USER=minioadmin \
          -e MINIO_ROOT_PASSWORD=minioadmin \
          -p 9000:9000 \
          -p 9001:9001 \
          minio/minio server /data --console-address ":9001"
        
        # Wait for MinIO to be ready
        sleep 10
        
        # Create bucket
        docker run --rm --network host minio/mc \
          mc alias set local http://localhost:9000 minioadmin minioadmin
        docker run --rm --network host minio/mc \
          mc mb -p local/dups || true
    
    - name: Start web app
      run: |
        cd apps/web
        pnpm dev &
        sleep 10
    
    - name: Run E2E tests
      run: pnpm e2e
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/dup
        REDIS_URL: redis://localhost:6379
        S3_ENDPOINT: http://localhost:9000
        S3_REGION: us-east-1
        S3_ACCESS_KEY: minioadmin
        S3_SECRET_KEY: minioadmin
        S3_BUCKET: dups
        NEXTAUTH_URL: http://localhost:3000
        NEXTAUTH_SECRET: test-secret
